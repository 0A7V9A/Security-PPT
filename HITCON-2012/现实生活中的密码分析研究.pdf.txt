Cryptanalysis in real life
 
1

Do u understand real hackers ?



  
 

 Mifare Classic Card Mifare Classic Card  


3

  

RFID

Reader

Tag 010101

 Smart Card
 i-cash YoYo

4

  

Reader





Tag



5

  

/  



??

3DES etc

  etc

0.8/10

6

 Mifare Classic Card



 

Mifare Classic Card 
Mifare Classic Card 
Crypto-1
Mifare Classic Card

7

 Mifare Classic Card  Mifare Classic Card
 1.13.56 MHz 2.106 Kbps 3.10cm
8

 Mifare Classic Card

 Mifare Classic Card



Sector

Block 0

0

Manufacturer Code

1

Data Block

2

Data Block

3

Data Block

4

Data Block

5

Data Block

6

Data Block

7

Data Block

8

Data Block

9

Data Block

10

Data Block

11

Data Block

12

Data Block

13

Data Block

14

Data Block

15

Data Block

Block 1
Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block

Block 2
Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block Data Block

Block 3
Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B Key A, Access Conditions, Key B

9

 Mifare Classic Card  Mifare Classic Card



0xff

Key A, Access Conditions, Key B

...

16block 256bytes

0xf0

DATA Block()

...

0x07

Key A, Access Conditions, Key B

0x06

DATA Block()

Sector 0x01

4 block,

0x05

DATA Block()

64bytes

0x04

DATA Block()

0x03 Key A, Access Conditions(), Key B

0x02

DATA Block()

Sector 0x00

0x01

DATA Block()

4 block,

0x00

UIDBCCManufacturer Code

()

64bytes

10

 Mifare Classic Card  Mifare Classic Card

   












Halt



11

 Mifare Classic Card  Mifare Classic Card

Mifare Classic

READER

TAG

1.UID()

2.Nt

3.{Nr}{Ar}

4.{At}

{}

12

 Mifare Classic Card  Mifare Classic Card



Step    H e x ( 1 6     ) I S O 1 4 4 4 3

0 RD

26

REQUEST

1 TAG 2 RD 3 TAG
4 RD

04 00 93 20 9C 59 9B 32 6C 93 70 9C 59 9B 32 6C 6B
30

AWAKE Polling UID
ANTI COLL

5 TAG

08 B6 DD

TAG TYPE

6 RD
7 TAG 8 RD 9 TAG

60 00 F5 7B
82 A4 16 6C EF EA 1C DA 8D 65 73 4B 9A 42 7B 20

AUTH
Nt Nr + Nt' Nt"

 



Hi, I am Reader, Is any card here ?

Hello, I am here.

Who are you ?

I am 9C 59 9B 32 6C

OK, I want to talk to you 9C 59 9B 32 6C

Ok. My card type is Mifare Classic 1K

 ,  00 Block

 Nt

 {Nr} + {Ar}

 {At}

13

 Mifare Classic Card  Crypto-1

LFSR (Linear Feedback Shift Registers) 





1010
nLFSR2n-1
14

 Mifare Classic Card  Crypto-1 PRNG(Pseudo-random Number Generator)
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
L (x0x1...x15):= x0x2x3x5 suc(x0x1...x31):= x1x2...x31L (x16x17...x31)
15

 Mifare Classic Card  Crypto-1 Filter Function
48 bit LFSR

f(a)

f(b)

f(b)

f(a)

f(b)

f(c)

Keysteam

16

 Mifare Classic Card  Crypto-1 (Parity Bit)
 0 1 2 3 4 5 6 7 P 0 1 2 3 4 5 6 7
 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
17

 Mifare Classic Card  Crypto-1
Crypto-1
()Crypto-1
Key UID

Crypto-1 Keystream

Nt
18

 Mifare Classic Card  Crypto-1 Crypto-1
() Nr
Crypto-1
Nr

{Nr}

19

 Mifare Classic Card  Crypto-1 Crypto-1
()TagArAtCrypto-1
{Nr}
Crypto-1
20

 Mifare Classic Card  Crypto-1
Crypto-1
()ReaderArTagAt
Crypto-1

keystream

Suc2(Nt) Suc3(Nt)
Halt Nack

{Ar}{At}{Halt}{Nack}

21

 Mifare Classic Card  Mifare Classic Card


Reader

UIDNt{Ar} {At}{Halt}{Nack}

Tag

22

 Mifare Classic Card  Mifare Classic Card
LFSR Rollback





1010

R(x1x2...x47 L(x0x1...x47)) = x0
23

 Mifare Classic Card  Mifare Classic Card

Inputs to Filter Function

48 bit LFSR

20bit

Filter Function 1bit

120  2 21

Odd 20 bit

Even 20 bit

24

 Mifare Classic Card  Mifare Classic Card Parity Bit

 0 1 2 3 4 5 6 7 P 0 1 2 3 4 5 6 7
 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
 {0} {1} {2} {3} {4} {5} {6} {7} {P} {0} {1} {2} {3} {4} {5} {6} {7}
25

 Mifare Classic Card  Mifare Classic Card Nested Authentications
Nt0 {Nt1} Nt1 {Nt1}=>
Nt216-1
26

 Mifare Classic Card 
 {Nr}
27

 Mifare Classic Card 
UIDNt{Nr}{Ar}{At}

Reader 

Tag 

1.Nt {At}{Halt}{Ar}ks3ks2 2.{Nr}ks1Nr 3.Nrstate 4.UIDNtKey

28

 Mifare Classic Card {Nr}
{Nr}
LFSR LFSR LFSR LFSR LFSR LFSR LFSR LFSR Nack Nack Nack Nack Nack Nack Nack Nack
LFSR

29

 Mifare Classic Card 
1.CRYPTO1 lib CRYPTO1  Key UID= 0x9c599b32; Nt= 0x82a4166c; {Nr}= 0xa1e458ce; {Ar}= 0x6eea41e0; {At}= 0x5cadf439; Keyffffffffffff
30

 Mifare Classic Card 
2.MFCUKMifare Classic Universal toolkit
 Libnfc Crapto-1 Mifare Classic Wirelessly Pickpocketing a Mifare Classic CardTHE DARK SIDE OF SECURITY BY OBSCURITY 
31

 Mifare Classic Card 
3.MfOC(Mifare Classic Offline Cracker ) NFC Mifare Classic  Nested Authentication  SectorNt Sector
32

 Mifare Classic Card 
4.Libnfc[NFC10] NFC  Mifare Classic   

33

 Mifare Classic Card 

5.Proxmark 3
 125 KHz 13.56 MHzRFID    




34

 Mifare Classic Card 
ISO 14443 
35

 Mifare Classic Card Mifare Classic


1.Sector 0( UID) 
2.Sector 1 3.Sector 2 4.Sector 32 5.Sector 461-3 6.Sector 564-6 7.Sector 6 8.Sector 7 9.Sector 14 10.Sector 15
 11.Sector 8-13()

Sector 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0

Block 60-63 56-59 52-55 48-51 44-47 40-43 36-39 32-35 28-31 24-27 20-23 16-19 12-15 8-11
4-7 0-3

Data  XX         64-6 61-3 2   (UID)

36

 Mifare Classic Card Mifare Classic


  


 libnfc   

 proxmark3
 libnfc


proxmark3 


37

 Mifare Classic Card Mifare Classic
 1.proxmark3(snoop)
Sector 14  2.libnfc 3.libnfcproxmark3 4.proxmark3
38

()

(auth block 38)

Nt

{Nr}{Ar}











{At}



{read block 38}

{block 38}

39

Proxmark3

 Reader TAG Reader TAG Reader TAG Reader TAG Reader TAG Reader TAG
Reader

Hex 26 04 00 93 20 4c d9 ff 7c 16 93 70 4c d9 ff 7c 16 b5 84 08 b6 dd 60 38 3e c6 3c 32 65 f1 bb 22 10 d6 c5 f1 be 05 99! 38 0c! 3d! aa 15 31 f6 ad 6c! 83! 2d f2 c2! 73 74! 4a c3 7c b2 d9! 48 d3 b7 9b 73! 14 bc 6b 62


Auth block 38 Nt {Nr}{Ar} {At} {read} {data} {halt}
40

Proxmark3
41

Proxmark3
42

 Mifare Classic Card Mifare Classic
XXCard() 1.proxmark3(snoop)XX
XX Sector 0()Sector2( )Sector4(63)Sector5( 63)  2.libnfcSector 3.libnfcproxmark3 4.proxmark3XX
43

(XXcard)

(auth block 3)

Nt

{Nr}{Ar}

{At}

{read block 3}

 

{block 3}



{read sector 2}

{sector 2}

{read sector 4}

{sector 4}

{read sector 5}

{sector 5}

Nested Auth

Mifare Clasic card

44

 
   
45

 

 Nt 
 New PRNG are different from old ones
 Old NACK (0101)  
 Parity is correct, Ar is wrong
 Old NACK (0100)  post authentication
 Parity is correct, Command is wrong
 New NACK (0000)
 Always send new NACK (0000 is not sure!)  New NACK does not reflect the parity status
46

 

 0 sector:  keystream recovery  
  sector: 
 {Nr} differential attack
 Old {NACK}{0101}
 Nested authentication
 Nt should be predictable
47

 

 Now we can try following
 Can we allow those random Nt ?
 Yes ! But we allow some patterns in pairs  We can count the differential Nts based on some
little modified states
 We can construct algebra formulas to represent states and relations
 Solve them by some existing tools
 SAT, SMT solver
48

 
 "   
  
  
49

 
 
 "    "
 
 " "
  
50

 
 RSA (1978)
51

 RSA
 (N, e):   (N, d):   
1. N = pqpq 2. de = 1 mod (p ­ 1)(q ­ 1)
 
1. p,q 2. e(p-1)(q-1)e < (p-1)(q-1) 3. d 
52

 RSA
 c:   m:   
m = cd mod N
 
c = me mod N

 RSA
 N pq
 RSA
 K. Aoki, J. Franke, A. K. Lenstra, E. Thomé, J. W. Bos, P. Gaudry, A. Kruppa, P. L. Montgomery, D. A. Osvik, H. te Riele, A. Timofeev, and P. Zimmermann. "Factorization of a 768-bit RSA modulus." February 18, 2010.

 RSA
 2261024-bit RSA  362048-bit RSA  RSA
2020 1024-bit RSA
 

But!
 A. K. Lenstra, J. P. Hughes, M. Augier, J. W. Bos, T. Kleinjung, and C. Wachter. "Ron was wrong, Whit is right." February 17, 2012.
 "We performed a sanity check of public keys collected on the web."
 "... two out of every one thousand RSA moduli that we collected offer no security."


 
1. p,q 2. N=pq 3. e(p-1)(q-1)d
 N1=p1qN2=p2q  q = gcd(N1,N2)
 


 2261024-bit RSA
 100  Lenstra
 
 362048-bit RSA
 
 


 
 
   
 


We must know We will know
David Hilbert
60

