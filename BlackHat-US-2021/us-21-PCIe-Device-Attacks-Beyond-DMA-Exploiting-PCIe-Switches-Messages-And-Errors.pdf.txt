PCIe Device Attacks: Beyond DMA
Exploiting PCIe switches, messages and errors Hareesh Khattri; Nagaraju N Kodalapura (Raju); Nam N Nguyen;
Intel Corporation
#BHUSA @BlackHatEvents

Who We Are

Hareesh Khattri

Nagaraju N Kodalapura

Nam N Nguyen

Offensive Security Researchers @ Intel
Security research activities targeting datacenter platforms supporting Trusted Computing and Virtualization Technologies
Contributed to a high-severity Intel Security Advisories (SA-00255, SA-00319, SA-00368), resulting in mitigation for 11 CVEs

#BHUSA @BlackHatEvents

AGENDA
 Introduction · PCIe Switches overview · SRIOV Overview · Threat Model
 PCIe Switches · General hardware design · Attacking EEPROM · PCIe TLP Injector · Beyond DMA
 PCIe Errors & SRIOV · PCIe Advance error reporting (AER) · SRIOV DOS attack
 Summary & Mitigations

#BHUSA @BlackHatEvents

Introduction
#BHUSA @BlackHatEvents

PCIe Switches ­ Overview
 PCIe Root Complex (RC)
· Root port of PCIe tree that connects CPU to IO
peripherals
· Can support Peer-to-peer communication between
devices
 PCIe Switches
· "A logical assembly of multiple virtual PCI-to-PCI Bridge
devices"
· At software level appear as multiple PCIe bridges · Enable connecting and expanding PCIe tree by exposing
more PCIe ports for pluggable PCIe devices.
· Must support forwarding of all PCIe TLP packets
between RC and PCIe Endpoint

Pcie Base Specification 5.0
#BHUSA @BlackHatEvents

PCIe Switches ­ Overview

 PCIe Switches: Transparent vs Non-Transparent
bridges
· Transparent bridge: The PCIe switch exposes all
connected downstream EPs to the RC directly in transparent mode
· Non-Transparent bridge (NTB): The PCIe switch
appears as EP device and connect two different PCIe busses with different RC
 NTB generally used to enable multiple RC
connections and bridging

Domain 0 CPU

Memory

Root Complex

Domain 1 CPU

Root Complex

Memory

PCIe NTB Switch

PCIe EP

PCIe EP

#BHUSA @BlackHatEvents

Threat Model

PCIe Switch

 Adversary Model
 Malicious PCIe device targeting host OS & platform assets  Malicious Virtual machine (VM)/ virtual function (VF): targeting
other VMs, Physical Function (PF) and platform hardware  Malicious PF targeting other platform trusted HW/FW
components  System software (BIOS/ Hypervisor)  Physical attacker
 Let's look at a few attack vectors:
 Malicious PF/ Host VM  Attacking EEPROM  PCIe TLP Injector  Beyond DMA
 Malicious Guest VM: Injecting PCIe Errors w/ SRIOV
#BHUSA @BlackHatEvents

PCIe Switches
#BHUSA @BlackHatEvents

PCIe Switches ­ Hardware Design

 Switch controls
· Exposed to Software through PCIe config space or MMIO mapped registers. Hypervisor will only allow EP to be exposed to Guest VMs
 Switch Configuration
· EEPROM Data and hardware straps
· Device firmware and patches (if switch has a microcontroller)
 Enable/disable debug modes  Potential variations
· Can support custom PCIe EP within switch used for switch configuration and management
· Can include a microcontroller within Switch with firmware stored in EEPROM

#BHUSA @BlackHatEvents

Attacking EEPROM
Possible attack: permanent denial of service by tampering with EEPROM contents
https://www.broadcom.com/products/pcie-switches-bridges/pcie-switches/pex8612

EEPROM Data · Port configuration &
physical parameters · Device firmware (if switch
has a microcontroller) · Software overrides for HW
strap settings · Patches for firmware and
configuration

#BHUSA @BlackHatEvents

Attacking EEPROM

0x5A, 0x80 : EEPROM Signature 0x02,0xA0 : Byte Count
Last 4 bytes image CRC
Add New register writes to: PCIe Revision ID , Device ID Update Byte count & CRC

EEPROM Data from PLX Switch

Modified EEPROM Data
#BHUSA @BlackHatEvents

Attacking EEPROM

 Writing to Read-only PCIe config space registers
· First tested changing Revision ID  0xBA · Writes using EEPROM method to extend new
Register writes works!!
 Now let's try a more interesting attack
· Modify Device ID , Vendor ID to 0xFFs · What is this going to result in?
· 0xFF_FF is defined as Invalid Vendor ID & Device
ID by PCI SIG
· PCIe Switch and all downstream devices no longer
show up in PCIe enumeration

Original PCIe tree showing PLX switch After attack: PLX switch is not detected in PCIe enumeration
CVE-2019-14625, CVE-2020-8677

Impact: Persistent DoS on PCIe switch that is not SW recoverable

#BHUSA @BlackHatEvents

PCIe Switches ­ TLP Injector

 PCIe Transaction layer packets (TLP) · PCIe communication messages that define
transaction types, address, size, data etc.
· Raw TLP injection ability is key feature used in Rogue
PCIe device attacks to target memory
 PCIe Switches Bridge PCIe messages · Must support forwarding of all PCIe TLP packets
between RC and PCIe Endpoint
· So, can we use the PCIe switches as a MiTM to
modify/ inject PCIe TLP messages?
 In general, PCIe switch design · Raw TLP injector mode is not likely to be a
functionally supported mode.
· Might be possible through Debug features or internal
firmware code execution.

Example PCIe TLP Format
#BHUSA @BlackHatEvents

PCIe Switches ­ TLP Injector

https://www.broadcom.com/products/pcie-switches-bridges/pcie-switches/pex8747 https://docs.broadcom.com/doc/12351854

TLP Bytes DW0 ­ DW 4 Length 0x02, FMT 0x40 MemWr , etc Writes 0xDEADBEEF to Address 0x0241_0000 (32 bit)
Script writes to Pcie Config register offsets 0x560, 0x56c, 0x570
- These are SW exposed and control the packet generator

Packet generator script for Mem write TLP
 Debug capability for Raw TLP injection is exposed to host software  Hardware does not support disabling this feature  CVE-2019-14626, CVE-2020-8676

Impact: Software can inject Raw TLP frames to target other platform components
#BHUSA @BlackHatEvents

PCIe Switches ­ Beyond DMA

System Memory DMA, MMIO attacks are known, what else?

Management Component Transport Protocol (MCTP) uses these messages

"The basic premise of MCTP is that higher layer protocols will fulfill security requirements (for example, confidentiality and authentication) for communication of management data. The MCTP protocol itself will not define any additional security mechanisms."

Pcie Base Specification 5.0 DMTF, DSP0236, Management Component Transport Protocol (MCTP) Base Specification DMTF, DSP0238, Management Component Transport Protocol (MCTP) PCIe VDM Transport Binding Specification
#BHUSA @BlackHatEvents

PCIe Switches- Beyond DMA

 MCTP message-based possible attacks
· Message spoofing: Possible by spoofing source/
destination endpoint ID of MCTP messages.
· Software send BMC privilege level platform management
commands : Exploiting PCIe packet injector or other issues in PCIe EP devices
· Messages can also be sent from PCIe switches
 Malformed messages to target MCTP message
handling firmware
· This is feasible from PCIe devices or SMBUS devices
that can generate MCTP messages.
· Example: Fragmented MCTP messages using Start of
message (SOM)/ End of message (EOM) flags to overflow past allocated memory. Issues in OpenBMC firmware here:
· https://gerrit.openbmc-project.xyz/#/c/openbmc/libmctp/+/34301/ · https://gerrit.openbmc-project.xyz/#/c/openbmc/libmctp/+/34300/

DMTF, DSP0238, Management Component Transport Protocol (MCTP) PCIe VDM Transport Binding Specification
#BHUSA @BlackHatEvents

PCIe Errors & SRIOV
#BHUSA @BlackHatEvents

PCIe Error Messages

Errors signaled through Completion TLP

Errors signaled through Message TLP

Pcie Base Specification 5.0

#BHUSA @BlackHatEvents

PCIe Advanced Error Reporting (AER)

PCIe error classification

 Uncorrectable Fatal Error
· PCIe end point device to send "Fatal Error" to root complex
 Registers of interest (PCIe 5.0 Spec)
· Uncorrectable Error Mask Register · Uncorrectable Error Severity Register

#BHUSA @BlackHatEvents

SRIOV Attack Scenarios

 Attack Scenario #1: Malicious VF/VM attacking other VFs/VMs and PF
· CVE-2019-0142, CVE-2019-0150
 Attack Scenario #2: Malicious VF/VM abusing its own Hardware (HW) resources to cause Platform DoS
· CVE-2019-0143 and CVE-2019-0144

VM (Attacker) VF Driver
· Illegal MMIO · Malformed TLP
CPU MCE PCIe error

Virtual Function

Host OS
Target VM VF Driver

Management VM VF Driver

VMM (PF driver)

Intel® VT-d*

PCI Express

Virtual Function

Virtual Function

Physical Function

SRIOV Capable PCIe Controller

SRIOV exploit demo video

#BHUSA @BlackHatEvents

Summary & Mitigations
#BHUSA @BlackHatEvents

PCIe Switches ­ Mitigations
 General Security protection PCIe switches
· Secure boot , Secure debug for protection of Switch controls. Supported in
newer versions of Switches
· Host Software , Hypervisor , Management VM isolation of switch controls
from Guest VM.
 Attack 1: Serial EEPROM programming
· Platform board rework can be done to block writes to EEPROM after
production using EEPROM write protection
· Hardware/ ROM based recovery mode in PCIe device and switches.
 Attack 2: TLP injector
· In PCIe switches such debug modes need to be disabled or authenticated
(secure debug)
· Platform can enable IOMMU protections to limit exposed memory regions
to PCIe Switch and connected devices
· Enable PCIe Access Control Service Source validation (ACSCtl: SrcValid) · Upstream Requestor ID is checked against Secondary/Subordinate bus
numbers.

#BHUSA @BlackHatEvents

Security Mitigations - SRIOV

Attack Scenario
Malicious VF/VM abusing its own HW resources to cause Platform DoS Malicious VF/VF attacking other VFs/VMs and PF
VFID spoofing

CVEs
CVE-2019-0143 CVE-2019-0144 CVE-2019-0142
CVE-2019-0150

Mitigation
PCIe device should ensure that it doesn't generate unconditional `Uncorrectable Fatal Error" by default. The error generation should follow the PCIe AER configuration requirements
PF driver should block a VF driver from issuing high-privileged commands like PF Reset
Acknowledgement: We would like to acknowledge Mr. Kumar Mangipudi (narasimhakumar.mangipudi@latticesemi.com) for his contribution to this CVE while he was part of Intel Corporation PF driver should validate all the incoming parameters from a VF before consuming them

#BHUSA @BlackHatEvents

Other Areas
 Other areas to investigate for security impact · Peer-2-Peer transactions between devices connected
through switches
· Memory protections and isolations for downstream
traffic
· PCIe new security features: · Device security enhancements (DICE) · Integrity & Encryption for messages : SPDM, PCIe
IDE

#BHUSA @BlackHatEvents

Notices and Disclaimers
Intel provides these materials as-is, with no express or implied warranties. No product or component can be absolutely secure. Intel and the Intel logo are trademarks of Intel Corporation in the United States and other countries. *Other names and brands may be claimed as the property of others. © Intel Corporation
#BHUSA @BlackHatEvents

Q & A

#BHUSA @BlackHatEvents

