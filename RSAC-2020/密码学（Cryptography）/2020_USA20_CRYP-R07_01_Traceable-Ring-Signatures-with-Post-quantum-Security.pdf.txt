SESSION ID: CRYP-R07
Post-Quantum Crypto: Traceable Ring Signatures with Postquantum Security

Hanwen Feng ; Jianwei Liu; Qianhong Wu; Ya-Nan Li
PhD. Candidate School of Cyber Science and Technology, Beihang University Email: feng_hanwen@buaa.edu.cn

#RSAC

#RSAC
Background and Motivations

Background: Digital Signatures
Alice can use her secret key to sign any message

#RSAC
Yes, it was signed by Alice!

Alice

Verifier

Correctness: Security:

Anyone can verify that the message was signed by Alice Anyone without Alice's secret key cannot forge a valid signature

Privacy Concern: Digital signature cannot provide privacy protection for signers.

3

#RSAC
Background: Privacy Demands from Real-World

E-voting

A ballot should not reveal the identity of the voter

The message should not reveal the identity of the TPM

Trusted Platform Module

E-cash

Transactions should not be traced

Vehicle Network

A broadcast message should not reveal the speed or position of a vehicle

4

Background: Ring Signatures
Ring signature [RST01] allows a ring member to use her/his
secret key to sign any message on behalf of this ring
Alice

#RSAC
Drawback:
Uncountable Anonymity
Yes, it was signed by someone in this ring!

Verifier
Everyone can verify this message was signed by a ring member, but cannot infer anything about the real signer
5

Background: Group Signatures
Group signature [Chaum91] allows a user to sign on behalf of a group, and only a designated Open Authority authority can get the identity.

Registration

Group Manager

Alice
6

#RSAC
It was signed by Alice!
Drawback: Centralized Traceability
Yes, this signature was generated by someone
registered with GM
Verifier

#RSAC
Background: Traceable Ring Signatures
In ring signature [LWW04], every two signatures w.r.t the same ring, generated by the same signer for different messages, can be publicly traced to the singer
The two signatures were created By Alice!
Verifier
A nice tradeoff between Anonymity and Traceability
7

#RSAC
Background: Application of Traceable Ring Signatures

Dishonest voters who vote for two candidates will be identified

E-voting

Offline E-cash

Dishonest users who perform doublespending attacks will be identified

Background: Post-quantum Cryptography

Digital Signature, Group Signature, Ring Signature, Traceable Ring Signatures...

PKE, PE

ZKP

Digital Signature, Group Signature, Ring Signature

PKEPE

#RSAC
FHE ZKP

Factoring Discrete Log Pairing [Shor94]: Algorithms for quantum computation: discrete logarithms and factoring

Coding

Isogeny

LWLaEttSiIcSe

Symmetric Primitives

Motivations

Digital Signature, Group Signature, Ring Signature

Traceable Ring Signature
FHE

PKEPE

ZKP

Coding

Isogeny

LWLaEttSiIcSe

Symmetric Primitives

#RSAC

#RSAC
Building Blocks

#RSAC
Building Blocks: Pseudorandom Function
:  ×    is a family of pseudorandom functions, if for   ,  [: ]
F (k,)  f ()
Additional Property ---Uniqueness For   , 1  2, we have
Pr[F (k1, x)  F (k2, x)] negl()

#RSAC
Building Blocks: Pseudorandom Function
Additional Property ---Intersection-free Range The range  is a vector space of rational numbers For every two distinct elements 1 , 2, and any polynomial (),

#RSAC
Building Blocks: Pseudorandom Function- Example
Example: PRF in Fujisaki and Suzuki's construction [FS07]  ,  = ()  
is a DDH group, and  is a random oracle. Uniqueness: every 1  2, ()1  ()2 Intersection-free range:  is a vector space of rational numbers

Building Blocks: Non-interactive Zero-knowledge

#RSAC

Proof of Knowledge

A statement  A witness  for 

A statement 

 is true

Prover

Verifier

Completeness: an honestly generated proof for a true statement will always be accepted

Building Blocks: Non-interactive Zero-knowledge

#RSAC

Proof of Knowledge

Extractor
The witness 
Proof of knowledge: a witness can be extracted from a valid proof by an extractor

Building Blocks: Non-interactive Zero-knowledge

#RSAC

Proof of Knowledge



Zero-knowledge : a valid proof can be simulated without the witness

#RSAC
General Framework of Traceable Ring Signatures

#RSAC
Framework of Unique Ring Signature [FZ12]
Key Generation: Choose a key of PRF as the secret key, and take the commitment of it as the public key.
Sign: a signature consists of a label and a proof
Label:  = (, (, )),  is a set of public keys,  is the message Proof: prove  is correctly generated by some  whose public key is in 
Link: If the two signatures have the same label, they will be linked

#RSAC
Our Framework: Design Principle

Ring

pk1

pk2

pk3

pk4

pk5

Signature 1 L 1

L 2

L 3

L 4

L 5

Using sk3

Proof: At least one label is honestly generated

Signature 2 L 1

L 2

L 3

L 4

L 5

Using sk3

Proof: At least one label is honestly generated

L3 in two signatures are identical,

We know they are created by someone whose pk is pk3

#RSAC
A Possible Attack

Ring

pk1

pk2

pk3

pk4

pk5

Signature 1 L 1

L 2

L 3

L 4

L 5

Using sk3

Proof: At least one label is honestly generated

Signature 2 L 1

L 2

L 3

L 4

L 5

Using sk4

Proof: At least one label is honestly generated

Signature 2 contains a label L2 that was borrowed from Signature 1

The two signatures will be wrongly traced to PK2!

#RSAC
Our Framework: More Details
To prevent malicious users from framing honest users, we need to ensure that other labels are uniquely determined by the honest label and the message.

L2 L1
H(M,R)

L4 L 3

 = L3 - H (M , R)
3

The line was determined by

tw= o Li

H (M , R) + i

points

L3 is an evaluation of PRF.

We need to perform ADD

and Scalar Multiplication

Operations on L3.

#RSAC
Our Framework: Security analysis
Tag-Linkability: the total number of unlinked signatures with one tag cannot exceed the total number of ring members From the simulation-extractability of the NIZK proof system, and the uniqueness of PRF. Anonymity: when a signature is signed by either of two signers, an attacker cannot infer anything as to by whom this signature is signed From the zero knowledgeness of the NIZK proof system, and the pseudorandomness of the PRF.
Exculpability : an honest signer cannot be accused of being dishonest by breaking the rule, even if every ring memeber except him is corrupted. From the simulation-extractability of the NIZK proof system, and the pseudorandomness of PRF.

#RSAC
Efficient Traceable Ring Signatures in Quantum Random Oracle Model

#RSAC
What is the Quantum Random Oracle Model

To get the output of a hash function 

Superposition queries are allowed



|

()

(|)

Random Oracle Model

Quantum Random Oracle Model

#RSAC
An Efficient PRF in QROM
H is modeled as a quantum random oracle The pseudorandomness can be reduced from LWE assumption
We prove the pseudorandomness in QROM, by using Zhandry's programming technique [Zhandry 12]

#RSAC
A Sigma Protocol for Our Construction

pk1 L 1 pk2 L 2 pk3 L 3 pk4 L 4
Merkle Tree-based Accumulator

We design a Stern-like protocol to prove :

U

There is an honestly

generated node that was

accumulated to U

#RSAC

Obtain a secure NIZKPoK in QROM: Unruh Transform

Hash all of them to get the selection what to open

1,1

1,1



1,1

Hidden by a random function

1

1,2
...
1,

1,2 1,

1,2
Idea
1,

2,1

2,1

2,1

Make the random

2

2,2

2,2

2,2

function invertible (for

...

......

2,

2,

2,

extractor)

,1

,1

,1

All needed information



,2

,2

,2

to extract the witness is

...

already contained in the

,

,

,

proof.

#RSAC
Apply What You Have Learned Today
In this paper, we give a general framework of traceable ring signatures from PRF and NIZKPoK We also provide a concrete construction by instantiating our framework with lattice-based components, and prove its security in the quantum random oracle model You can obtain your traceable ring signatures by instantiating our framework with other possible components You may improve our framework in efficiency or security
29

#RSAC
Thanks for your listening

