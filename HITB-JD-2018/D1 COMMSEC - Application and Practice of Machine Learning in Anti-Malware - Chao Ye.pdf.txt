-

-- -

-

-

-

-

--





8 68

.

8

8

A 8!.

B

68

8

8

!68

.

8 . ..



-

-

!

-

Millions of training samples

!

structure



-
&
270 millions strings filter

-
1 million+ cluster



+

+

+

+

-

-

+- -

/

+



·

.

. .,

.

·

.

.

.

·.

.. . ,

.' '

,. '

It is often said that

.

.

,

.

.,

,

.,

.

, ..

,.

,,

4

describes a file from multiple aspects

-+

+

4+

'

'

'

'

'

' ''

Embody the intent of the program
/
there is no need to create an encoding for each name

)

0

40 4 % 0

0 40 4 ( 10 %0 02

10 2 07

Frequently used instructions are
grouped, others are completely
reserved.

-
In the obfuscated code, both the immediate number and the register are heavily used.

3/ 3 - 3 1- -

- /3 -

- "13 2 1-

"Micorsoft Windows "

3

,,

avoid the

detection of some antivirus software, such as:

CASE 1

The program is compiled by the ordinary

compiler,but there is a lot of high entropy

data in the code. After execution, the data

is decoded into code and executed, such

as : ,

,

,

CDD85B79900FC8FB82768808576A8F38 Malware.XPACK-HIE/Heur!1.9C48

CASE 2

The code between the first symbol and the last symbol almost fills the entire code section

Very little code between the first and last symbols in some malware

ISRR: imported symbols referenced ratio. ISCR: imported symbols invoked ratio. ILRR: imported libraries referenced ratio. ISDD(Max/Min): the density of symbols distribution in file. RPOS1: the offset of first symbol divided by the section size. EDCR: the compression rate of the executable data in program. IBR: the ratio of branch instructions to total instructions (200). IDR: to measure whether an instruction can be statically tracked. DER: how many export symbols are in the data segment. BSR: the ratio of BSS section size to image size. MSGR: the ratio of the maximum size between two symbols and the code section size.

20 million samples
remove duplicate samples
cluster filtering
100 million malware & clean files

actual number of bytes

--

·

-

-

-

-

·

-

--

·

--

· -- -

·-

-
-

-

--

·

-

·-

-

--

7 4 7 2 + 27

2 07

+

7

+4 7

1

17 4 8 +

2- 27

2

27 +42

- 27

1 -481 4 1 -, 1 4
14

7-,1 1 4
14

1 -481 4 1 7-, 1 4

, -, - -7 .-

4 08

7-,1 1 4 7 ,-

. -7 ,1 -481 4 1 7-, 1 4 0- 7 1414 ,1..1 18 7- 7-, -,

&

+

+: +5 : + : +5 :
A set of historical samples after filtering and dimensionality reduction

5+ 5+ + + clean files :

::

5

:+5 :

=

+,

5

0:

.

.

0.

-

-

!! !!

How do we do that?

-.

.,

.

-

-

-

.

- . .- - .-, -

.,

.

.

.-

, --

- ,.

-

-.

, .

.

-,

,, ,

. .,

.

,.

,,

",

,,

,,

, ,, . .

,.

,

,,

.

-/

/7 1 / 8 1/

/0

1 / /8 7

1 / /8 7

1 7
-/ 4

  

3 23 .0 3 % 02 3 2 2
02 3 2 2
3 1 .0 3 2

1 2 % 3/

1

021

2

1 20

:: D AF ,BD 5FE E :: D AF , 5F D E A A D A

, 5F D E 5D JFD5 F :DB : 5E EFD F D 5A

EFD A E A '

AF

5K C D:BD 5A

: 5F 5 BEF 5 0 /-3E

D5 E B:

':F D EC 5 ABD 5 5F BA JFD5 F E D CF E FBA : 5F D E -F E

EF 6 A CDB 6 5 E F B:F A BA: FE I F

%

, 5F D E B :DB 0 , KIBD E 5A 6 88% of PDF exploits/phishing can be detected.

.2 About



· AI/ML can improve the productivity of all aspects of anti-malware. · The goal of using ML needs to be clear. · In our application, the feature engineering directly affects the final effect. · It's important to mitigate false positives.

-
+

