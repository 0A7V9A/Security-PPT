  
-  
    

·    · develop  your  product  for  yourself

select  *  from  store.items  where     category="camera"  and  dslr=1  and     color  <>  red  order  by  price  asc     limit  20  
  

select  *  from  (select  *  from  store_beijing.items_01  where     category="camera"  and    dslr=1  and    color  <>  red    union  all   select  *  from  store_beijing.items_02  where  category="camera"     and    dslr=1  and  color  <>  red    union  all   select  *  from  store_shanghai.items_01  where  category="camera"     and    dslr=1  and  color  <>  red    union  all   select  *  from  store_shanghai.items_02  where  category="camera"     and    dslr=1  and  color  <>  red    union  all   select  *  from  store_hangzhou.items_01  where  category="camera"     and    dslr=1  and  color  <>  red  union  all   select  *  from  store_hangzhou.items_02  where  category="camera"     and    dslr=1  and  color  <>  red  )  a  order  by  price  asc  limit  20     
  

  
·       ·   
·       ·   
·       ·   

   store.items:                                                                                                         Type:  Scaling                                                                                               Method:  return  {  family="shop",    
  [1]  =  "store_bejing.itmes_01",       [2]  =  "store_shanghai.items_01"  ...  }                                      
select  *  from  store.items  where     category="camera"  and  dslr=1  and     color  <>  red  order  by  price  asc  limit  20  
  

        


 rowkey  

 rowkey
  

   

HBase  

Diamond   
Group   
  


 Yaml  

protob uf  

 mysql
  

  

UNION GROUP  BY

LEFT  (OUTER)   JOIN
NATURAL   JOIN

INSERT UPDATE

   ORDER  BY

LIMIT WHERE

MySQL     

SQL  

  

C++  

   

 
IO  

IO  

 
  

  

  

   ·    ·    · SQL   · Driver  

Instance Misc
HbaseThriK Driver

  

Evaluator
Instance Impl

Instance Writer  

Fetcher  

FakeDriver

MySQL Driver

WorkerPool
Instance--1 Instance--2 Instance--3 [Idle]

  
IoPool
Driver--1 Driver--2 Driver--3 Driver--4

SQL
· SQL  92   SELECT  
· SQL  Parser  
­ sqlite3lemon   
­   

SQL
SELECTINSERT/ UPDATE  
SELECT   · UNION/UNION  ALL   · GROUP  BY/ORDER  BY/LIMIT   ·    · INNER  JOIN/LEFT  OUTER  JOIN/NATURE  JOIN   ·      

SQL  
· SQL  
­ FROMDriver   ­ JOIN(  )   ­ WHERE()   ­ GROUP  BY   ­ SELECT()()   ­ DISTINCT   ­ ORDER  BY  

SQL
· SQL  
­    ­ UINON      SELECT  *  FROM  t1  INNER  JOIN  t2  ON(t1.id  =   t2.id)   UNION  ALL   SELECT  *  FROM  t3  INNER  JOIN  (SELECT  *   FROM  t4  WHERE  t4.amt  >  1000.0)  

SQL
·   
­ MySQL      SELECT  uid,  amt  FROM  t1   UNION  ALL   SELECT  uid,  amt  FROM  t2   UNION  ALL   SELECT  uid,  amt  FROM  t3  

SQL
  
SELECT  uid,  amt  FROM  t1   UNION  ALL   SELECT  uid,  amt  FROM  (           SELECT  uid,  amt  FROM  t2           UNION  ALL           SELECT  uid,  amt  FROM  t3)  AS  unamed0  

SQL
·   
­    
   ·    SELECT  uid,  amt  FROM  scale.t1(1,  1000);      1,1000d1.t1,d1.t2,d2.t1        

SQL
   SELECT  uid,  amt  FROM  d1.t1   UNION  ALL   SELECT  uid,  amt  FROM  d1.t2   UNION  ALL   SELECT  uid,  amt  FROM  d2.t1   
MySQL  

Driver  
Driver lucid  

Driver  
· FakeDriver   · Driver   · Fake  
· HbaseThriftDriver   · HbaseThriftHbase   · HbaseThrift  
· MySQLDriver   · MySQL   · MySQL  

Driver  
· HbaseThriftDriver   ·   
· Rowkey   ·    ·   

Driver  
·   
· luarowkey/   · rowkey
   · rowkeykeycolumn
  

Driver  
·   Hbaselz-datax  
· rowkeycrc32(key)  %   region_num  
· columnstring   · key  

  
   · SQL   · Hbase   · UPDATE/INSERT  

  

